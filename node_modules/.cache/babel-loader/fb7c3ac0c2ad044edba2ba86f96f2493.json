{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-movie-cards-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\nimport { Link } from 'react-router-dom';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    movieAPI.getMovie(id).then(item => this.setState({\n      movie: item,\n      loading: false\n    }));\n  }\n\n  render() {\n    // Change the condition to check the state\n    const {\n      movie: {\n        title,\n        storyline,\n        imagePath,\n        genre,\n        rating,\n        subtitle,\n        id\n      },\n      loading\n    } = this.state;\n    if (loading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, `Title: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/:${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"EDITAR\"));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    })\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-movie-cards-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","PropTypes","movieAPI","Loading","Link","MovieDetails","constructor","state","movie","loading","componentDidMount","match","params","id","props","getMovie","then","item","setState","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACnCM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACAZ,IAAAA,QAAQ,CAACa,QAAT,CAAkBF,EAAlB,EAAsBG,IAAtB,CAA4BC,IAAD,IAAU,KAAKC,QAAL,CAAc;AACjDV,MAAAA,KAAK,EAAES,IAD0C;AAEjDR,MAAAA,OAAO,EAAE;AAFwC,KAAd,CAArC;AAID;;AAEDU,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEX,MAAAA,KAAK,EAAE;AAAEY,QAAAA,KAAF;AAASC,QAAAA,SAAT;AAAoBC,QAAAA,SAApB;AAA+BC,QAAAA,KAA/B;AAAsCC,QAAAA,MAAtC;AAA8CC,QAAAA,QAA9C;AAAwDZ,QAAAA;AAAxD,OAAT;AACJJ,MAAAA;AADI,QACQ,KAAKF,KADnB;AAEA,QAAIE,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,wBACE;AAAK,qBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAI,MAAKa,SAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,UAASF,KAAM,EAArB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,aAAYK,QAAS,EAA3B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,cAAaJ,SAAU,EAA7B,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,UAASE,KAAM,EAArB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,WAAUC,MAAO,EAAvB,CANF,eAOE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAI,YAAWX,EAAG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF;AAWD;;AAjCkC;;AAoCrCR,YAAY,CAACqB,SAAb,GAAyB;AACvBf,EAAAA,KAAK,EAAEV,SAAS,CAAC0B,KAAV,CAAgB;AACrBf,IAAAA,MAAM,EAAEX,SAAS,CAAC0B,KAAV,CAAgB;AACtBd,MAAAA,EAAE,EAAEZ,SAAS,CAAC2B;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALoB,CAAzB;AAQA,eAAexB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\nimport { Link } from 'react-router-dom';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    movieAPI.getMovie(id).then((item) => this.setState({\n      movie: item,\n      loading: false,\n    }));\n  }\n\n  render() {\n    // Change the condition to check the state\n    const { movie: { title, storyline, imagePath, genre, rating, subtitle, id },\n      loading } = this.state;\n    if (loading) return <Loading />;\n    return (\n      <div data-testid=\"movie-details\">\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n        <p>{ `Title: ${title}` }</p>\n        <p>{ `Subtitle: ${subtitle}` }</p>\n        <p>{ `Storyline: ${storyline}` }</p>\n        <p>{ `Genre: ${genre}` }</p>\n        <p>{ `Rating: ${rating}` }</p>\n        <Link to={ `/movies/:${id}/edit` }>EDITAR</Link>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}