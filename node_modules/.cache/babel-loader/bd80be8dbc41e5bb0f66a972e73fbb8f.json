{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-movie-cards-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      movie\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      movie: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    movieAPI.getMovie(id).then(movie => this.setState({\n      movie\n    }));\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie).then({\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    })\n  }).isRequired\n};\nexport default EditMovie;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-movie-cards-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","MovieForm","Loading","movieAPI","EditMovie","constructor","props","state","loading","movie","handleSubmit","bind","componentDidMount","params","id","getMovie","then","setState","updatedMovie","updateMovie","render","shouldRedirect","propTypes","match","PropTypes","shape","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA;AAFW,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEH,MAAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKR,KAA3C;AACAH,IAAAA,QAAQ,CAACY,QAAT,CAAkBD,EAAlB,EAAsBE,IAAtB,CAA4BP,KAAD,IAAW,KAAKQ,QAAL,CAAc;AAClDR,MAAAA;AADkD,KAAd,CAAtC;AAGD;;AAEDC,EAAAA,YAAY,CAACQ,YAAD,EAAe;AACzBf,IAAAA,QAAQ,CAACgB,WAAT,CAAqBD,YAArB,EAAmCF,IAAnC,CAAwC;AACtCR,MAAAA,OAAO,EAAE;AAD6B,KAAxC;AAGD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,OAAF;AAAWa,MAAAA,cAAX;AAA2BZ,MAAAA;AAA3B,QAAqC,KAAKF,KAAhD;;AACA,QAAIc,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIb,OAAJ,EAAa;AACX,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGC,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtC+B;;AAyClCN,SAAS,CAACkB,SAAV,GAAsB;AACpBC,EAAAA,KAAK,EAAEC,SAAS,CAACC,KAAV,CAAgB;AACrBZ,IAAAA,MAAM,EAAEW,SAAS,CAACC,KAAV,CAAgB;AACtBX,MAAAA,EAAE,EAAEU,SAAS,CAACE;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALiB,CAAtB;AAQA,eAAevB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      movie,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { movie: { params: { id } } } = this.props;\n    movieAPI.getMovie(id).then((movie) => this.setState({\n      movie,\n    }));\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie).then({\n      loading: false,\n    })\n  }\n\n  render() {\n    const { loading, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (loading) {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}